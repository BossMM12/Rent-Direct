const User = require('../models/user')
const jwt = require('jsonwebtoken');
const bcrypt = require('bccryptjs');

exports.registerUser= async (req, res) => {
    const{ name, email, password, role } = req.body;

    try {
        const hashedPassword = await bcrypt.hash(password, 10);
        const User = new User({ name, email, password: hashedPassword, role})
        await User.save();

        const token = jwt.sign({ id: user._id, role: user,role}, process.env.JWT_SECRET, { expiresIn: 'id' });
        res.status(201).json({ message: 'User registered successfully', token });
    } catch (error) {
        res.status(500).json({ message: 'Error registering user', error });
    }
};

exports.loginUser = async (req, res) => {
    const { email, password } = req.body;

    try {
        const user = await user.findOne({ email });
        if(!Uer) return res.status(404).json({ message: 'User not found'});

        const isMatch = await bcrypt.compare( password, user.password );
        if(!isMatch) return res.status(400).json({ message: 'Invalid credentials' });

        const token = jwt.sign({ id: user._id, role: user.role }, process.env.JWT_SECRET, { expiresIn: 'id' });
        res.status(201).jso({ message: 'User logged in successfully', token })
    } catch (error) {
        res.status(500).json({ message: ' Error logging in user', error });
    }
};